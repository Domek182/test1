main

#include <iostream>
#include "Punkt.h"
using namespace std;

int main()
{
    Punkt2D A;
    int x,y;
    cout<<"Podaj wspolrzedna x\n";
    cin>>x;
    cout<<"Podaj wspolrzedna y\n";
    cin>>y;
    A.Utworz(x,y);
    A.Odczytaj();

}

header


#ifndef Wektor_h

#define Wektor_h
#include <iostream>
using namespace std;


class Punkt2D{
private:
    int x;
    int y;
public:
    void Utworz (int x, int y);
    void Odczytaj ();
    void Wypisz ();
};

class Punkt3D{
private:
    int x;
    int y;
    int z;
public:
    void Utworz (int x, int y, int z);
    void Odczytaj ();
    void Wypisz ();
};
class Wektor3D{
private:
    int x;
    int y;
    int z;
public:
    void Utworz (Punkt3D P1, Punkt3D P2);
    Wektor3D Przesuniecie (Wektor3D V, Punkt3D P);
    Wektor3D Dodawanie (Wektor3D V1, Wektor3D V2);
    Wektor3D Odejmowanie (Wektor3D V1, Wektor3D V2);
    Wektor3D Iloczyn_Skalarny (Wektor3D V1, Wektor3D V2);
    Wektor3D Iloczyn_Wektorowy (Wektor3D V1, Wektor3D V2);
};

#endif // Wektor_h



css

#include "Wektor.h"
#include <iostream>

void Punkt2D::Utworz(int x1, int y1){
x = x1;
y = y1;
};
void Punkt2D::Odczytaj(){
cout<<"["<<x<<","<<y<<"]";
}
void Punkt2D::Wypisz(){
}
void Punkt3D::Odczytaj(){
cout<<"["<<x<<","<<y<<"]";
}
void Punkt3D::Utworz(int x1, int y1, int z1){
x = x1;
y = y1;
z = z1;
}
void Wektor3D::Utworz(Punkt3D P1, Punkt3D P2){
x = P2.x-P1.x;
y = P2.y-P1.y;
z = P2.z-P1.z;
}
Wektor3D Wektor3D::Przesuniecie(Wektor3D V, Punkt3D P){
Wektor3D W;
W.x=V.x+P.x;
W.y=V.y+P.y;
W.z=V.z+P.z;
return W;
}
